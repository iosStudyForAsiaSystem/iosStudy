/*:
  ## 演習問題：独自の構造体
 「型」のPlaygroundで、実世界における型と、関連する型（その型が依存する型）の例について考えました。例えば、`TrainingShoe`という型では`Int`型の`size`、`String`型の`brandName`、`Date`型の`releaseData`というプロパティが考えられます。
 */
/*:
 - callout(演習):
 もう1つ、実世界にあるものと、そのプロパティを考えてください。そのものが実行できる活動や動作を考え出してください。まず、簡単な日本語または英語でコメントとして記述します。
*/
 // 型を日本語または英語で説明した文を、ここに追加してください。コメント行の先頭には必ず//を追加してください。
 //
 //
 //

/*:
 - callout(演習):
 このレッスンで学習した`struct`構文を使って、皆さんが考えたプロパティとメソッドを持つ、実世界のものを表す型を作成します。値が変わる可能性があるかどうか考えて、各プロパティに`let`または`var`のマークを付けてください。メソッドの本文を実装する方法がわからない場合は、メソッドが行う処理をコメントとして記述してください。\
*ヒント：カスタム型で任意のプロパティを作成した場合、実装を空にしたプレースホルダ型を作成できます。（例については、このページの下部にあるTrainingShoeのコードを参照してください）以下のプレースホルダ型を使うことで、Playgroundをエラーなく実行できます。*
*/
// 独自の構造体をここに追加してください。






/*:
 - callout(演習):
 作成した構造体を使って、あなたの型の新しいインスタンスを作成してください。

*/


/*:
 - note:(注意): 以下は、TrainingShoeの作成に使用したプレースホルダ型の例です。
*/
// プレースホルダ型
struct Shoelaces {

}

struct TrainingShoe {
    let size: Int
    var isTied: Bool
    var laces: Shoelaces

    func squeak() {
        // 体育館のフロアでゴムがきしむような音をたてる
    }

    func warnAboutLaces() {
        // 靴ひもがほどけたら、結ぶように注意を出力する
    }
}

// プレースホルダ型のインスタンスを作成する
let newLaces = Shoelaces()

// プレースホルダ型のインスタンスを使って、新しい型のインスタンスを作成する
let newShoe = TrainingShoe(size: 39, isTied: true, laces: newLaces)





/*:
_Copyright (C) 2017 Apple Inc. All Rights Reserved._\
_このサンプルのライセンス情報については、LICENSE.txtを参照してください。_
 */
/*:
 [前ヘ](@previous)  |  9／9ページ
*/
